server:
  port: 8081

spring:
  application:
    name: spring-cloud-goods
  rabbitmq:
    host: localhost
    port: 5672
    username: admin
    password: admin
  zipkin:
    base-url: http://localhost:9411 # 指定Zipkin server 的地址
    sender:
      type: web  # 发送跟踪数据到Zipkin的类型web(http)
  sleuth:
    sampler:
      probability: 1.0 # 对于微服务接收的请求采样的数量，默认是0.1，也就是10%，因为分布式系统中采集庞大的数据量会影响性能，这里根据数据量来设置
  cloud:
    stream:
      binders:
        rabbitmq:         # 这个rabbitmq是binders中String类型key,是自定义的，会在与bindings绑定时使用
          type: rabbit
          environment:
            spring:       # 这个spring是environment中String类型key,是自定义的
              rabbitmq:
                host: localhost
                prot: 5672
                username: admin
                password: admin
                virtual-host: / # 虚拟主机，在rabbitmq中不同的虚拟主机exchange、queue、message不能互通，相当于数据库的分库
      bindings:
        myoutput:           # 这个output是管道名,对应在@EnableBinding({Source.class})中Source.class的OUTPUT属性，或者自己写的Source.class接口OUTPUT属性值
          destination: spring.cloud.stream.exchange # 定义交换机的名称
          binder: rabbitmq  # 这个rabbitmq是spring.cloud.stream.binders所自定义设置的key
#  security:
#    user:
#      name: cat           # 设置访问该微服务需要的用户名
#      password: 123456    # 设置访问该微服务需要的密码


management:
  endpoints:
    web:
      exposure:
        include: '*' # 如果直接给*，就会打开所有的Web访问端点

eureka:
  instance:
    lease-renewal-interval-in-seconds: 2 # 客户端每2s发送一次心跳
    lease-expiration-duration-in-seconds: 10 # 10s 没有发送心跳说明客户端故障，服务会被踢出去
    prefer-ip-address: true # true说明客户端服务的服务实例以IP作为链接，而不是域名
    instance-id: spring-cloud-goods-8081 # 告诉注册中心服务实例的id，id是唯一的
  client:
    service-url:
      defaultZone: 'http://admin:123456@eureka8762:8762/eureka,http://admin:123456@eureka8763:8763/eureka,http://admin:123456@eureka8764:8764/eureka' # 注册中心的连接地址